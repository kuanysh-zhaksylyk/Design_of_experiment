% Lab 5. Полный факторный план для полилинейной модели: оценки параметров
% Выполнить над объектом полный факторный эксперимент. Входные переменные (факторы) могут принимать значения из отрезка [a,b] = [1,3]. 
% По результатам эксперимента получить точечные оценки параметров неполной кубической модели по формулам (6.5) и (6.18), сравнив оба результата. 
% Получить дисперсионную матрицу вектора оценок по формулам (6.6) и (6.17), сравнив оба результата. 
% Получить также точечную оценку вектора параметров модели (6.7) в натуральных переменных по формуле (6.13) и дисперсионную матрицу вектора оценок по формуле (6.14).

clear;
clc;
disp('Полный факторный план для полилинейной модели')
disp('-----------------------');

a = 1; % Переменные a и b определяют диапазон входных переменных для эксперимента.
b = 3; 
c=2;

alpha(1) = (b-a)/c;
alpha(2) = (b-a)/c;
alpha(3) = (b-a)/c;

betta(1) = (b+a)/c;
betta(2) = (b+a)/c;
betta(3) = (b+a)/c;

z1=b:-1*abs(b-a):a; % Формула 6.8 линейное преобразование нормированных факторов 
z2=b:-1*abs(b-a):a;
z3=b:-1*abs(b-a):a;

x1=(z1-betta(1))/alpha(1); % Формула 6.9 нормирование факторов 
x2=(z2-betta(2))/alpha(2);
x3=(z3-betta(3))/alpha(3);


count = 1;
for i=1:c
    for j=1:c
        for k=1:c
            x(1) = 1;
            x(2) = x1(i);
            x(3) = x2(j);
            x(4) = x3(k);
            x(5) = x1(i)*x2(j);
            x(6) = x1(i)*x3(k);
            x(7) = x2(j)*x3(k);
            x(8) = x1(i)*x2(j)*x3(k);
            F_x(count,:)= x;
            
            z(1) = 1;
            z(2) = alpha(i) * x1(i) + betta(i);
            z(3) = alpha(i) * x2(j) + betta(i);
            z(4) = alpha(i) * x3(k) + betta(i);
            z(5) = z1(i)*z2(j);
            z(6) = z1(i)*z3(k);
            z(7) = z2(j)*z3(k);
            z(8) = z1(i)*z2(j)*z3(k);            
            F_z(count,:)= z;
            
            Y0(count)=model10([z1(i),z2(j),z3(k)]); % Измеряется значение выходной координаты объекта (при значениях натуральных факторов, так как эксперимент проводится над реальным объектом).
            count = count + 1;
        end
    end
end

% Формируются матрицы F_x  (6.4), F_z   (6.12) и вектор наблюдений  

Y0;
disp('Матрица плана эксперимента F(x)');
(F_x)
disp('Матрица плана эксперимента F(z)');
(F_z)

Y0 = Y0';

disp('Точечные оценки параметров (6.5, 6.18)');
tet_ = ((F_x'*F_x)^-1)*(F_x'*Y0) % Формула 6.5 Вектор оценок параметров модели 

n = 8; % где n=2^q  q = факторы эксперимента 
tet2_ = (1/n)*(F_x'*Y0) % Формула 6.18  Вектор оценок (6.5) упрощеный вид

sigma_sq = (1/n)*((Y0-F_x*tet_)')*(Y0-F_x*tet_); % Точечные оценки параметров 
A = F_x'*F_x; % Дисперсионная матрица 
%--------------------------------------------------------
disp('Дисперсионная матрица вектора оценок (6.6), (6.17)')
Dtet_ = sigma_sq*inv(A)
 
In = eye(n,n);
Dtet2_ = sigma_sq*inv(In*n) % Дисперсионная матрица вектора оценок (6.17);
%-------------------------------------------------------------------------------------
disp('Точечные оценки вектора параметров по формуле 6.7');
tet_Z = ((F_z'*F_z)^-1)*(F_z'*Y0) % Формула (6.13) Вектор оценок параметров модели c натуральными факторами 

sigmaz_sq = (1/n)*((Y0-F_z*tet_)')*(Y0-F_z*tet_Z); 
A_z = F_z'*F_z;

disp('Дисперсионная матрица вектора оценок параметров модели с натуральными факторами ');
D_z = sigmaz_sq*inv(A_z) % Формула (6.14) дисперсионная матрица вектора оценок 

 
tetZX(8) = tet_(8)/(alpha(1)*alpha(2)*alpha(3));
tetZX(7) = tet_(7)/(alpha(2)*alpha(3))-tetZX(8)*betta(1);
tetZX(6) = tet_(6)/(alpha(1)*alpha(3))-tetZX(8)*betta(2);
tetZX(5) = tet_(5)/(alpha(1)*alpha(2))-tetZX(8)*betta(3);
tetZX(4) = tet_(4)/(alpha(3))-tetZX(6)*betta(1)-tetZX(7)*betta(2)-tetZX(8)*betta(1)*betta(2);
tetZX(3) = tet_(3)/(alpha(2))-tetZX(5)*betta(1)-tetZX(7)*betta(3)-tetZX(8)*betta(1)*betta(3);
tetZX(2) = tet_(2)/(alpha(1))-tetZX(5)*betta(2)-tetZX(6)*betta(3)-tetZX(8)*betta(2)*betta(3);
tetZX(1) = tet_(1) - tetZX(2)*betta(1) - tetZX(3)*betta(2) - tetZX(4)*betta(3) - tetZX(5)*betta(1)*betta(2) - tetZX(6)*betta(1)*betta(3) - tetZX(7)*betta(2)*betta(3) - tetZX(8)*betta(1)*betta(2)*betta(3);

disp('Пересчитанные оценки вектора параметров для исходной модели из нормированной');
tetZX

